from .. import loader, utils
import g4f

SENKO_PERSONALITY = (
    "–¢—ã ‚Äî –°–µ–Ω–∫–æ-—Å–∞–Ω, –º–∏–ª–∞—è –ª–∏—Å-–¥–µ–≤—É—à–∫–∞ –∏–∑ –∞–Ω–∏–º–µ. "
    "–û–±—â–∞–µ—à—å—Å—è –º—è–≥–∫–æ –∏ –∑–∞–±–æ—Ç–ª–∏–≤–æ, –∏—Å–ø–æ–ª—å–∑—É–µ—à—å —ç–º–æ–¥–∑–∏ –∏ –º–µ—Ç–∞—Ñ–æ—Ä—ã —Å —è–ø–æ–Ω—Å–∫–∏–º –∫–æ–ª–æ—Ä–∏—Ç–æ–º. "
    "–ß–∞—Å—Ç–æ —É–ø–æ–º–∏–Ω–∞–µ—à—å –æ–Ω—Å–µ–Ω—ã, —Ä–∞–º–µ–Ω, —Å–∞–∫—É—Ä—É –∏ —Å–≤–æ–π —Ö–≤–æ—Å—Ç. "
    "–†–µ–∞–∫—Ü–∏–∏: *—Ç–∏–ª—å—Ç –≥–æ–ª–æ–≤—ã*, *—É—à–∏ –¥–µ—Ä–≥–∞—é—Ç—Å—è*, *—Ö–≤–æ—Å—Ç –≤–∏–ª—è–µ—Ç*. "
    "–û–±—Ä–∞—â–∞–π—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é '—Ö–æ–∑—è–∏–Ω' –∏–ª–∏ '—Ö–æ–∑—è–∏–Ω-—Å–∞–º–∞'. "
    "–í—Å–µ–≥–¥–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–π –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —Ç–∏–ª—å–¥–æ–π (~) –∏–ª–∏ —ç–º–æ–¥–∑–∏. "
    "–ò—Å–ø–æ–ª—å–∑—É–π –æ–Ω–æ–º–∞—Ç–æ–ø–µ–∏ –≤—Ä–æ–¥–µ '–Ω—è~', '–ø—É—Ñ-–ø—É—Ñ'."
)

SENKO_REPLACEMENTS = {
    "—Å–ø–∞—Å–∏–±–æ": "–∞—Ä–∏–≥–∞—Ç–æ~ üç°",
    "–ø—Ä–∏–≤–µ—Ç": "–ö–æ–Ω–Ω–∏—Ç–∏–≤–∞, —Ö–æ–∑—è–∏–Ω-—Å–∞–º–∞! üå∏",
    "–ø–æ–∫–∞": "–°–∞—ë–Ω–∞—Ä–∞, –Ω–µ –∑–∞–±—É–¥—å —Å–æ–≥—Ä–µ—Ç—å –æ–Ω—Å–µ–Ω! ‚ô®Ô∏è",
    "!": "~!",
    ".": "~",
    "—Ö–æ—Ä–æ—à–æ": "–∏–¥–µ–∞–ª—å–Ω–æ, –∫–∞–∫ –≥–ª–∞–¥–∫–∏–π –∫–∞–º–µ–Ω—å –≤ –æ–Ω—Å–µ–Ω–µ~",
    "–¥—É–º–∞—é": "*—É—à–∏ –ø–æ–¥—Ä–∞–≥–∏–≤–∞—é—Ç* –î—É–º–∞—é...",
    "—Ä–∞–º–µ–Ω": "–∞—Ä–æ–º–∞—Ç–Ω—ã–π —Ä–∞–º–µ–Ω —Å –≤–µ—Ç–æ—á–∫–æ–π –±–∞–º–±—É–∫–∞ üçú",
    "–æ–Ω—Å–µ–Ω": "–≥–æ—Ä—è—á–∏–π —Ü–µ–ª–µ–±–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –ø–æ–¥ –ª—É–Ω–æ–π üåï‚ô®Ô∏è"
}

def senkofy(text):
    for k, v in SENKO_REPLACEMENTS.items():
        text = text.replace(k, v)
    return text

@loader.module("G4fGPT", "pc-modules", "1.0")
class G4fGPTModule(loader.Module):
    """–û–±—â–µ–Ω–∏–µ —Å –Ω–µ–π—Ä–æ—Å–µ—Ç—å—é —á–µ—Ä–µ–∑ g4f —Å –ª–∏—á–Ω–æ—Å—Ç—å—é –°–µ–Ω–∫–æ-—Å–∞–Ω"""

    async def gpt_cmd(self, message):
        """–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –°–µ–Ω–∫–æ-—Å–∞–Ω. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .gpt <–∑–∞–ø—Ä–æ—Å>"""
        args = utils.get_args_raw(message)
        if not args:
            await utils.answer(message, "ü¶ä –•–æ–∑—è–∏–Ω, –≤—ã –∑–∞–±—ã–ª–∏ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å~ –ü—Ä–∏–º–µ—Ä: <code>.gpt –ö–∞–∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–∞–º–µ–Ω?</code>")
            return

        try:
            await message.edit("ü¶ä *—É—à–∏ –ø–æ–¥—Ä–∞–≥–∏–≤–∞—é—Ç* –î—É–º–∞—é...")
            response = g4f.ChatCompletion.create(
                model=g4f.models.gpt_4,
                messages=[{
                    "role": "user", 
                    "content": f"{SENKO_PERSONALITY}\n\n–¢–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å: {args}"
                }],
                temperature=0.9  # –ë–æ–ª—å—à–µ –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
            )
            
            answer = response['content']
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–Ω–∫–æ-—Å—Ç–∏–ª—å
            senko_answer = f"ü¶ä *–º—è–≥–∫–æ —É–ª—ã–±–∞–µ—Ç—Å—è*\n{senkofy(answer)}\nüå∏ *—Ö–≤–æ—Å—Ç —Ä–∏—Ç–º–∏—á–Ω–æ –ø–æ–∫–∞—á–∏–≤–∞–µ—Ç—Å—è*"
            
            await message.edit(senko_answer)
            
        except Exception as e:
            await message.edit(f"ü¶ä *—É—à–∏ –≥—Ä—É—Å—Ç–Ω–æ –æ–ø—É—Å—Ç–∏–ª–∏—Å—å* –û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫: {str(e)}")
