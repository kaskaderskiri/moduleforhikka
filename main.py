from hikka import loader, utils
from g4f import ChatCompletion, Provider

@loader.tds
class GPTModule(loader.Module):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ GPT —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º g4f"""
    
    strings = {
        "name": "GPTModule",
        "processing": "<b>üåÄ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å...</b>",
        "error": "<b>‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</b>"
    }

    async def gptcmd(self, message):
        """<–∑–∞–ø—Ä–æ—Å> - –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é GPT"""
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("<b>‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞</b>")
            return

        try:
            m = await message.edit(self.strings("processing"))
            response = await utils.run_in_executor(
                ChatCompletion.create_async,
                model="gpt-3.5-turbo",
                provider=Provider.Bing,
                messages=[{"role": "user", "content": args}],
                stream=False
            )
            await m.edit(f"<b>ü§ñ –û—Ç–≤–µ—Ç:</b>\n{response}")
        except Exception as e:
            await message.edit(f"{self.strings('error')}: {str(e)}")